@model Exposure.Entities.Job

@{
      ViewBag.Title = "Update";
}

<h2>Update Job</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    foreach (var item in ViewBag.Job)
    {
        if (TempData["Application"] != null)
        {
            <div class="alert alert-warning alert-dismissable" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <strong>Warning!</strong>@TempData["Application"]. <a href="@Url.Action("Index", "JobApplications")">Click here</a> to review applcations.
            </div>
        }
        <div class="form-horizontal">            
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => model.Title, new { id = item.Title })                    
                    @Html.HiddenFor(model => model.JobID, new { id = ViewBag.JobID })
                    @Html.HiddenFor(model => model.StartDate, new { @Value = item.StartDate })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SkillID, "Skill", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Skill.SkillDescription, new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.SkillID, new { id = item.SkillID })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => model.Description, new { id = item.Description })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @readOnly="readonly" } })                    
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EndDate, new { id= ViewBag.JobEnd, htmlAttributes = new { @class = "form-control" } })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", @readOnly="readonly" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control", @readOnly="readonly" } })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control", @readOnly = "readonly" } })
                    @Html.HiddenFor(model => model.Rate, new { id = item.Rate })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SuburbID, "SuburbID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Suburb.SubName, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.SuburbID, new { id = item.SuburbID })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => model.AddressLine1, new { id = item.AddressLine1 })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => model.AddressLine2, new { id = item.AddressLine2 })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Completed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (TempData["Application"] != null)
                    {
                         if (item.Completed == false)
                         {
                             <p>No</p>
                         }
                         else
                         {
                             <p>Yes</p>
                         }
                    }
                    else
                    {
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Completed)
                            @Html.ValidationMessageFor(model => model.Completed, "", new { @class = "text-danger" })
                         </div>                        
                    }
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Update" class="btn btn-default" @(TempData["Application"]!=null? "disabled='disabled'":"") />
                </div>
            </div>
        </div>
    }

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
