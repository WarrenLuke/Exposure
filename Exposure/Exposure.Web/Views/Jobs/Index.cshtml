@model IPagedList<Exposure.Entities.Job>
@using PagedList;
@using PagedList.Mvc;
@using System.Web.Mvc;

@using Exposure.Entities
@{
    ViewBag.Title = "Jobs";
}

@if (User.IsInRole("Worker"))
{
    <a href="@Url.Action("Dashboard","Workers")">Back to Dashboard</a>
}
else if (User.IsInRole("Employer"))
{
    <a href="@Url.Action("Dashboard","Employers")">Back to Dashboard</a>
}
else
{
    <a href="@Url.Action("Dashboard","Home")">Back to Management</a>
}

@if (TempData["JobSuccess"] != null)
{
    <div class="alert alert-success alert-dismissable" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        @TempData["JobSuccess"]
    </div>
}
@if (TempData["ReviewSuccess"] != null)
{
    <div class="alert alert-success alert-dismissable" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        @TempData["ReviewSuccess"]
    </div>
}
<div class="row">
    <div class="col-md-2">
        <h2>Jobs</h2>
        @if (User.IsInRole("Employer"))
        {
            <a href="@Url.Action("Create", "Jobs")" class="btn btn-default">Create Job</a>
        }
    </div>
    <div class="col-md-offset-1 col-md-2" style="text-align:">
    </div>
    <div class="col-md-offset-2 col-md-5" style="text-align:right">
        @using (Html.BeginForm("Index", "Jobs", FormMethod.Get))
        {
            <div class="col-md-offset-3 col-md-6">
                <br />
                @Html.Editor("search", new { htmlAttributes = new { @class = "form-control clearable", @placeholder = "Search" } })
            </div>
            <div class="col-md-3" style="vertical-align:top">
                <br />
                <input type="submit" class="btn btn-default" value="Search" />
            </div>


        }
    </div>
</div>
<br />

@using (Html.BeginForm("Index", "Jobs", FormMethod.Get))
{
    <div class="row search">
        <div class="col-md-2">
            <p>Category: </p>@Html.DropDownList("skill", null, "All", new { @class = "form-control" })
        </div>
        <div class="col-md-2">
            <p>Location: </p>@Html.DropDownList("location", null, "All", new { @class = "form-control" })
        </div>
        <div class="col-md-2">
            <p>Sort by: </p>@Html.DropDownList("sortOrder", new SelectList(
new List<Object>
{
    new{value="date", text= "Latest"},
    new{value="date_desc", text="Date Advertised(Desc)"},
    new {value="rate", text="Rate(Lowest)"},
    new {value="rate_desc", text="Rate(Highest)"}
},
"value", "text", 2), new { @class = "form-control" })
        </div>
        <div class="col-md-2">
            <p>From:  &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; <i><a href="#" onclick="Dates()" class="btn-danger btn-xs" data-toggle="tooltip" title="Clear dates">&times;</a></i> </p> @Html.TextBox("frmDate", null, new { @class = "form-control datepicker", @id = "frmDate", onkeydown = "return false", onpaste = "return false", placeholder = "Select from Date" })
        </div>
        <div class="col-md-2">
            <p>To: &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; <i><a href="#" onclick="Dates()" class="btn-danger btn-xs" data-toggle="tooltip" title="Clear dates">&times;</a></i></p>@Html.TextBox("toDate", null, new { @class = "form-control datepicker", @id = "toDate", onkeydown = "return false", onpaste = "return false", placeholder = "Select to Date" })
        </div>
        <div class="col-md-2" style="text-align:right">
            <br />
            <input type="submit" class="btn btn-default" value="Filter" style="width:100px" />
        </div>
    </div>
}
@if (User.IsInRole("Employer"))
{
    <br />

    <div class="row">
        <div class=" col-md-offset-9
             col-md-3" style="text-align:right">
            <br />
        </div>
    </div>

    <input type="hidden" id="hiddenJobID" />
    <br />

    <div style="overflow-x:auto">
        <table class="table table-striped table-bordered dt-nowrap" id="myTable">
            <tr>
                <th width="25">
                    Title
                </th>
                <th width="25">
                    Skill
                </th>
                <th>
                    Location
                </th>

                <th>
                    Duration
                </th>

                <th>
                    Hours
                </th>

                <th>
                    Rate
                </th>
                <th>
                    Completed
                </th>
                <th></th>
            </tr>

            @if (Model != null)
            {
                foreach (var item in Model)
                {
                    <tr id="row_@item.JobID">
                        <td>
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Skill.SkillDescription)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AddressLine1)<br />
                            @if (item.AddressLine2 != null)
                            {
                                @Html.DisplayFor(modelItem => item.AddressLine2)<br />
                            }
                            @Html.DisplayFor(modelItem => item.Suburb.SubName)<br />
                            @Html.DisplayFor(modelItem => item.Suburb.City.CityName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StartDate) till @Html.DisplayFor(modelItem => item.EndDate)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.StartTime) till @Html.DisplayFor(modelItem => item.EndTime)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Rate)
                        </td>
                        <td>
                            @if (item.Completed == false)
                            {
                                <p>No</p>
                                <a href="@Url.Action("Update", "Jobs",new { id = item.JobID })" class="btn btn-default"> Update </a><br />
                            }
                            else
                            {
                                <p>Yes</p>
                            }
                        </td>
                        <td style="text-align:center">
                            @if (item.Completed == false)
                            {

                                <a href="@Url.Action("Edit", "Jobs", new { id=item.JobID} )" class="btn btn-info" data-toggle="tooltip" title="Edit"><i class="glyphicon glyphicon-pencil"></i> </a>

                            }
                            else if (item.Completed == true)
                            {
                                foreach (var w in ViewBag.WList)
                                {
                                    if (w.JobID == item.JobID)
                                    {
                                        <a href="@Url.Action("Create","Reviews", new {job= item.JobID, worker = w.WorkerID, employer= item.EmployerID })">Review worker</a>
                                    }
                                }
                            }
                            <a href="@Url.Action("Details", "Jobs", new { id = item.JobID })" class="btn btn-info" data-toggle="tooltip" title="Details"><i class="glyphicon glyphicon-list-alt"></i></a>
                            <br />
                            <a href="#" onclick="ConfirmDelete(@item.JobID)" class="btn btn-danger" data-toggle="tooltip" title="Delete"><i class="glyphicon glyphicon-trash"></i></a>
                        </td>
                    </tr>
                }
            }
        </table>

        @if (ViewBag.JobAmt == 0)
        {
            <div class="alert alert-warning">
                <text>No jobs available to display</text>
            </div>
            <br />
        }
        <div class="col-md-10">
            <div class="center">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = Model.PageSize }))
                Showing @Model.FirstItemOnPage to @Model.LastItemOnPage of @Model.TotalItemCount Jobs
            </div>
        </div>

        <div class="col-md-6">
            <a href="@Url.Action("Index", "Manage")">Back to profile</a>
        </div>
        <div class="modal fade" id="myModal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <a href="#" class="close" data-dismiss="modal">&times;</a>
                        <h3 class="modal-title">Delete Job?</h3>
                    </div>
                    <div class="modal-body">
                        <h4>Are you sure you want to delete this job? </h4>
                        <div style="text-align:center; display:none" id="loaderDiv">
                            <img src="~/Images/InternetSlowdown_Day.gif" width="150" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                        <a href="#" class="btn btn-success" onclick="DeleteJob()">Confirm</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else if (User.IsInRole("Admin"))
{
    <br />
    <div style="overflow-x:auto">
        <table class="table table-striped table-bordered dt-nowrap">
            <tr>
                <th width="25">
                    Title
                </th>
                <th>
                    Employer
                </th>
                <th width="25">
                    Skill
                </th>
                <th>
                    Location
                </th>

                <th>
                    Duration
                </th>

                <th>
                    Hours
                </th>

                <th>
                    Rate
                </th>
                <th>
                    Completed
                </th>
                <th></th>
            </tr>
            @if (ViewBag.JobAmt != 0)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td>
                            <a href="@Url.Action("UserDetails", "Account", new {id= item.Employer.EmployerID })">@Html.DisplayFor(modelItem => item.Employer.ApplicationUser.FirstName)  @Html.DisplayFor(modelItem => item.Employer.ApplicationUser.LastName) </a>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Skill.SkillDescription)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AddressLine1)<br />
                            @if (item.AddressLine2 != null)
                            {
                                @Html.DisplayFor(modelItem => item.AddressLine2)<br />
                            }
                            @Html.DisplayFor(modelItem => item.Suburb.SubName)<br />
                            @Html.DisplayFor(modelItem => item.Suburb.City.CityName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StartDate) till @Html.DisplayFor(modelItem => item.EndDate)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.StartTime) till @Html.DisplayFor(modelItem => item.EndTime)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Rate)
                        </td>
                        <td>
                            @if (item.Completed == false)
                            {
                                <p>No</p>
                            }
                            else
                            {
                                <p>Yes</p>
                            }
                        </td>
                        <td>
                            <a href="#" class="btn btn-danger" onclick="DeleteJob(@item.JobID)"><i class="glyphicon glyphicon-trash"></i></a>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td>No jobs Available to display</td></tr>
            }

        </table>
        <div class="col-md-10">
            <div class="center">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = Model.PageSize }))
                Showing @Model.FirstItemOnPage to @Model.LastItemOnPage of @Model.TotalItemCount Jobs
            </div>
        </div>
    </div>
}
else if (User.IsInRole("Worker"))
{
    <a href="@Url.Action("Index", "Manage")">Back to profile</a>
    <br />
    <div style="overflow-y:auto">
        <table class="table table-striped table-bordered dt-nowrap" width="100" cellspacing="0">
            <thead>
                <tr>
                    <th>Job Title</th>
                    <th>Description</th>
                    <th>Skill</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Job Rate</th>
                    <th>Job Status</th>
                    <th></th>
                </tr>
            </thead>
            @foreach (var item in ViewBag.JobHistory)
            {
                <tr>
                    <td>@item.Job.Title</td>
                    <td>@item.Job.Description</td>
                    <td>@item.Job.Skill.SkillDescription</td>
                    <td>@item.Job.StartDate</td>
                    <td>@item.Job.EndDate</td>
                    <td>@item.Job.Rate</td>
                    <td>
                        @if (item.Job.Completed == true)
                        {
                            <p>Yes</p>
                        }
                        else
                        {
                            <p>No</p>
                        }
                    </td>
                    <td>
                        @if (item.Job.Completed == true)
                        {
                            <a href="@Url.Action("Create", "Reviews", new { job = item.JobID, employer = item.Job.EmployerID })">Review Employer </a>
                        }
                    </td>
                </tr>
            }
        </table>
    </div>
    <div class="col-md-10">
        <div class="center">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = Model.PageSize }))
            Showing @Model.FirstItemOnPage to @Model.LastItemOnPage of @Model.TotalItemCount Jobs
        </div>
    </div>
}

@section scripts{
    <script>

        function ConfirmDelete(JobID) {
            $("#hiddenJobID").val(JobID);
            $("#myModal").modal('show');
        }

        var DeleteJob = function () {

            $("#loaderDiv").show();

            var jobID = $("#hiddenJobID").val();
            $.ajax({
                type: "POST",
                url: "/Jobs/Delete",
                data: { id: jobID },
                success: function () {
                    $("#loaderDiv").hide();
                    $("#myModal").modal("hide");
                    $("#row_" + jobID).remove();
                }
            });
        }

        var Dates = function () {
            $("#frmDate").datepicker('setDate', null);
            $("#toDate").datepicker('setDate', null);
        }




        $(function () {
            $("#frmDate").datepicker({
                onSelect: function (selected) {
                    $("#toDate").datepicker("option", "minDate", selected)
                }
            })

            $("#toDate").datepicker({

            })


        })
    </script>

}


