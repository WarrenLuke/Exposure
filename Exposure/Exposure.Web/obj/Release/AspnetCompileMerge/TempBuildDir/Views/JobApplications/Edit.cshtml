@model Exposure.Entities.JobApplication
@{
    ViewBag.Title = "Edit";
}
<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h4>Job Application</h4>
    <hr />
    if (User.IsInRole("Worker"))
    {
        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.JobApplicationID)
            <div class="form-group">
                @Html.LabelFor(model => model.JobID, "Job:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Job.Title)
                    @Html.ValidationMessageFor(model => model.JobID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Job.Employer.EmployerID, "Employer", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(Model => Model.Job.Employer.ApplicationUser.FirstName) &nbsp; @Html.DisplayFor(Model => Model.Job.Employer.ApplicationUser.LastName)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Motivation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Motivation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Motivation, "", new { @class = "text-danger" })
                </div>
            </div>     
            
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Update" class="btn btn-default" />
                </div>
            </div>
        </div>

    }
    else if (User.IsInRole("Employer"))
    {
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.JobApplicationID, "JobAppID" )
            <div class="form-group">
                @Html.LabelFor(model => model.JobID, "JobID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model=>model.Job.Title)                   
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.WorkerID, "WorkerID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Worker.ApplicationUser.FirstName) &nbsp; @Html.DisplayFor(model => model.Worker.ApplicationUser.LastName)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Motivation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Motivation, new { htmlAttributes = new { @class = "form-control" } })                   
                </div>
            </div>
            <div class="form-group">
                    @Html.LabelFor(model => model.Response, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.Response, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Response, "", new { @class = "text-danger" })
                    </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Reply" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

}
<div>
    <a href="@Url.Action("Index","Manage")">Back to Profile</a>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
